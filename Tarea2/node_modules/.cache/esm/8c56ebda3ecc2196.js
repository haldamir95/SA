let Server,esbRouter,fetchQuery,esbcontroller,lineReader;_3ec‍.x([["esbServer",()=>esbServer]]);_3ec‍.w("../server",[["Server",["Server"],function(v){Server=v}]]);_3ec‍.w("../../routers/esb-router",[["routerV1",["esbRouter"],function(v){esbRouter=v}]]);_3ec‍.w("../../request-manager",[["fetchQuery",["fetchQuery"],function(v){fetchQuery=v}]]);_3ec‍.w("../../controllers/esb-controller",[["esbcontroller",["esbcontroller"],function(v){esbcontroller=v}]]);_3ec‍.w("../../line-reader",[["lineReader",["lineReader"],function(v){lineReader=v}]]);





class EsbServer extends Server{

    constructor () {
        super(3003)
        super.routers(esbRouter)
        this.menuMsn = '------ Ordenes sin procesar ------'
        this.consoleMsn = '------ Esperando transaccion ------\n'
    }

    mostrarTransacciones(){
        console.log('Se recibio orden de un clinete\n')
        _3ec‍.g.console.log(esbcontroller.orders[esbcontroller.orders.length-1])
    }

    start () {
        _3ec‍.g.console.log(this.consoleMsn)
        mostrarTransacciones()
        /*const opt = -1
        while ((opt !== await lineReader.askQuestion(this.consoleMsn)) !== 0) {
          if (opt === 0) break
          this.showOrders()
        }*/
    }


}

//exportando
       const esbServer = new EsbServer()